jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Albatross\UserBundle\Entity\User:
          algorithm: sha1
          iterations: 1
          encode_as_base64: false
        

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_TYPE_USER]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        main:
          chain:
            providers: [in_memory, user_db]
        in_memory:
            memory:
                users:
                    admin: { password: admin , roles: [ 'ROLE_ADMIN' ] }
        user_db:
            entity: { class: Albatross\UserBundle\Entity\User, property: username }
        

    firewalls:
      main:
            pattern: /.*
            form_login:
                check_path: /login_check
                login_path: /login
            logout:
                path:   /logout
                target: /login
            security: true
            anonymous: true
            remember_me:
                key:      %secret%
                lifetime: 84600
                path:     /
                domain:   ~ 
      dev:
          pattern:  ^/(_(profiler|wdt)|css|images|js)/
          security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
#            #anonymous: ~
#            #http_basic:
#            #    realm: "Secured Demo Area"

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/create*, roles: ROLE_ADMIN }
        - { path: ^/project*, roles: ROLE_TYPE_USER }
        - { path: ^/daily*, roles: ROLE_TYPE_USER }
        - { path: ^/viewiof*, roles: ROLE_TYPE_USER }
        - { path: ^/filelist*, roles: ROLE_TYPE_USER }
        - { path: ^/ioflist*, roles: ROLE_TYPE_USER }
        - { path: ^/forecast*, roles: ROLE_TYPE_USER }
        - { path: ^/Customclient*, roles: ROLE_TYPE_USER }
        - { path: ^/Customwave*, roles: ROLE_TYPE_USER }
        - { path: ^/Customproject*, roles: [ROLE_TYPE_USER, ROLE_TYPE_CLIENT] }
        - { path: ^/admin*, roles: ROLE_ADMIN }
        - { path: ^/index, roles: ROLE_ADMIN }
#        - { path: ^, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/*, roles: ROLE_TYPE_USER}
#        - { path: ^/user*, roles: ROLE_USER_MANAGEMENT }
#        
#        - { path: ^/*, roles: ROLE_USER }